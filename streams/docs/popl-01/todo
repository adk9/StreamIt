------------------------------------------------------------------------
Big things to think about

0. how exactly to define the latency of a feedback loop in terms of
wavefronts and stuff, hmm.

1. operational semantics
2. message sending syntax
3. letting init codes cause an offset (do push() on output)
4. verifying round-robin's are legal by having same rate on both sides

5. semantics for weighted round-robin / duplicates?  or proof of
simulation by a single round-robin.

6. if a stream sends or receives a message, is the wavefront relative
to the output or input?

7. exact semantics of initialization when combining with tapes/messaging.

8. define the path you take in non-i/o connected streams for
messaging.  If they're parallel pieces of split/join, do you
synchronize from above or below?  I think theres's a difference.

9. problem: it's legal to run nothing but a source.  oh, unless
there's latency.

10. I'm coping out on the feedback loop wavefront delay because I
don't know what to do.  

------------------------------------------------------------------------
Little things to think about

1. would it help to outlaw aliasing?
2. should we rename filter to block?  to operator?

------------------------------------------------------------------------
Future things to think about

1. any notion of exceptions?  error handling?

2. any concept of filters ignoring items?  would affect wavefront (a
select filter, for example.)

3. real-time constraints

------------------------------------------------------------------------
Things to write about

1. latency
2. drain/destroy initialization semantics
3. feedback loop initialization
4. portals - let's just adopt templated java lists for the sake of presentation
5. exact restrictions on java?
6. semantic restrictions of streamit

7. the scripting component - having a pipeline of n blocks at runtime
isn't supported in all langs.

8. diagram with class hierarchy?

9. reorganize the derivations of min/max so that stuff leaving the
split/join and stuff entering the split/join is together?  then the
similar equaionts are placed next to each other.

10. improve writing of feedbackloop section.

11. talk to saman about changing example FIR so that it
pushes(peek(i)); pop(); instead of pushing the dummy values.

12. add some latency constraints to the example

13. make latency symbol consistent - l or n?  

14. introduce n(t) notation earlier.

15. change messaging semantics so it's clear what happens in the case
of a portal.

16. improve timing by defining upstream and downstream somewhere near
the top.

17. how do they declare how many they push and pop?

18. can't have operator overloading on the complex add operation

19. put a split/join in the radio example -- looks better and makes more sense

20. change Complex to float for example

21. somewhere in semantics, say what we don't do

** put the feedbackloop joiner transfer functions as a composition of
some other joiner function so that I can still use duplicate, etc there.
