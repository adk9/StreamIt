package streamittest;

import junit.framework.*;

/**
 * StreamITTestCase is the base class for all streamit
 * test cases. This class provides some useful methods.
 * $Id: StreamITTestCase.java,v 1.8 2002-07-03 19:30:50 aalamb Exp $
 **/
class StreamITTestCase extends TestCase {
    static final String EXAMPLE_PATH  = "docs/examples/hand/";
    static final String APPS_PATH     = "apps/";

    static final int    DEFAULT_FLAGS = CompilerInterface.NONE;
    
    /** Compiler interface for this test to use **/
    CompilerInterface compiler;

    /**
     * Create a new StreamITTestCase with the default compiler options.
     **/
    public StreamITTestCase(String name) {
	this(name, DEFAULT_FLAGS);
    }
    
    /**
     * Create a new StreamItTestCase with the
     * specified compiler flags.
     **/
    public StreamITTestCase(String name, int flags) {
	super(name);
	// create a compiler interface for the test case to use (set up the compiler options)
	this.compiler = CompilerInterface.createCompilerInterface(flags);
    }

    /**
     * Performs streamit compile, gcc compile.
     **/
    public void doCompileTest(String root,
			      String filename) {
	// acutally do the compilation
	boolean result = compiler.streamITCompile(root,
						  filename);
	// assemble the id of this test
	String idMessage = ("Compile " + root + filename +
			    "(" + compiler.getOptionsString() + ")");

	// if the compilation was successful, print a success message
	if (result == true) {
	    ResultPrinter.printSuccess(idMessage);
	}

	// use JUnit framework to assert that the test was ok
    	assertTrue(idMessage, result);
    }


    /**
     * Tries to execute the program that was generated by running
     * doCompileTest(root, filename). returns true if execution
     * doesn't terminate with a non 0 eit status.
     **/
    public void doRunTest(String root,
			  String filename) {
	// test execution
	boolean result = compiler.streamITRun(root,
					      filename);
	// make an id string for this test
	String idMessage = ("Executing " + root + filename +
			    "(" + compiler.getOptionsString() + ")");

	// if success, print a message
	if (result == true) {
	    ResultPrinter.printSuccess(idMessage);
	}

	// use junit framwork to test for success
	assertTrue(idMessage, result);

    }

    /**
     * Compares the output generated by doRunTest with the contents of the specified
     * data file.
     **/
    public void doCompareTest(String root,
			      String filename,
			      String datafile) {

	// test that the output produced is the same as what is expected
	boolean result = compiler.streamITCompare(root,
						  filename,
						  datafile);
	String idMessage = ("Verify output " + root +
			    filename + "(" + compiler.getOptionsString() + ")"); 
	
	// if success, print a success message
	if (result == true) {
	    ResultPrinter.printSuccess(idMessage);
	}
	
	// use JUnit framework
	assertTrue(idMessage, result);
    }

    /**
     * Performs streamit compile, gcc compile, execution, and comparison.
     * root is root directory path.
     * filename is the streamit program file.
     * datafile is the file with known correct data.
     **/
    public void doCompileRunVerifyTest(String root,
				       String filename,
				       String datafile) {
	
	// run the compilation tests
	doCompileTest(root, filename);

	// try to run the program
	doRunTest(root, filename);

	// compare the output
	doCompareTest(root, filename, datafile);
    }

	

    public void doMake(String root) {
	assertTrue("make for " + root,
		   compiler.runMake(root));
    }

    public void doMake(String root, String target) {
	assertTrue("make for " + root + " target " + target,
		   compiler.runMake(root, target));
    }

    
}
	    
